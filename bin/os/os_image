#!/bin/bash -e
# Copyright (c) 2017 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

format=qcow2
image=coreos_production_openstack_image.img
default=1520.6.0

help()
{
  cat <<EOF
os_image - Openstack image upload for coreos images

os_image [-p] [-f <format>] [<version>]

Options:
  -p          upload as public image
  -f <format> use dedicated format for openstack
              (default is $format)
The default version is $default.
EOF
  exit 0
}

while [ $# -gt 0 ]; do
  case "$1" in
    -p)
        visibility="--visibility public"
        shift;;
    -f) format="$2"
        shift 2;;
    -*) echo "invalid option $1" >&2
        exit 1;;
    help) help;;
    *) break;;
   esac
done

ROOT="$(pwd)"
while [ "$ROOT" != / ]; do
  if [ -d "$ROOT/k8s" -a -f "$ROOT/terraform.tfvars" ]; then
    break
  else
    ROOT="$(dirname "$ROOT")"
  fi
done

OSRC="$ROOT/gen/osrc"
if [ ! -f "$OSRC" ]; then
  OSRC="$ROOT/osrc"
fi
if [ -f "$OSRC" ]; then
  echo "sourcing $OSRC..."
  source "$OSRC"
fi

version=${1:-$default}
#version=${1:-1576.4.0}
if [ ! -f $image ]; then
  echo "downloading image $version"
  wget http://stable.release.core-os.net/amd64-usr/$version/coreos_production_openstack_image.img.bz2
  bunzip2 coreos_production_openstack_image.img.bz2
fi
if [ "$format" != "qcow2" ]; then
  echo "converting to $format"
  qemu-img convert -f qcow2 -O $format $image "$(basename $image .img).$format"
  image="$(basename $image .img).$format"
fi
echo "uploading format $format"
glance image-create --name coreos-$version \
  --container-format bare \
  --disk-format $format \
  --progress $visibility \
  --file "$image"
