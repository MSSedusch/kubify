apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: etcd
    etcd_cluster: kube-etcd
  name: kube-etcd-backup-sidecar
  namespace: kube-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: etcd_backup_tool
      etcd_cluster: kube-etcd
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: etcd_backup_tool
        etcd_cluster: kube-etcd
      name: kube-etcd
    spec:
      containers:
      - command:
        - /usr/local/bin/etcd-backup
        - --etcd-cluster=kube-etcd
        env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CLUSTER_SPEC
          value: '{"size":1,"baseImage":"dummy","version":"dummy","pod":{"nodeSelector":{"node-role.kubernetes.io/master":""},"resources":{},"tolerations":[{"key":"node-role.kubernetes.io/master","operator":"Exists","effect":"NoSchedule"}]},${backup},"TLS":{"static":{"member":{"peerSecret":"etcd-peer-tls","serverSecret":"etcd-server-tls"},"operatorSecret":"etcd-client-tls"}}}'
        - name: AWS_S3_BUCKET
          value: ${bucket}
        image: quay.io/coreos/etcd-operator:${etcd_operator_version}
        imagePullPolicy: IfNotPresent
        name: backup
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /root/.aws/
          name: secret
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: secret
        secret:
          defaultMode: 420
          secretName: etcd-backup
